<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="G_icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAADgAA
        ABEAAAA+AAAAPgAAAD4AAAA+AAAAMAAAACwAAAAPAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAOAAAAEQAAAD4AAAA+AAAAPgAAAD4AAAAwAAAALAAAAA8AAAAAAAAA////////////////////
        ////////AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAAVwAA
        AH4AAADMAAAA1gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8gAAAP//////////////
        ////////////////////////AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACkAAABXAAAAfgAAAMwAAADWAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/////////
        ////////////////////////////////////////AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAHAAAACgAA
        AHIAAAC3AAAA2QAAAP8AAAD/AAAA/wAAAPMAAADBAAAAvQAAAH4AAAB+AAAAfgAAAH4AAACgAAAAqAAA
        AP////////////////////////////////////////////////8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAcAAAAKAAAAcgAAALcAAADZAAAA/wAAAP8AAAD/AAAA8wAAAMEAAAC9AAAAfgAAAH4AAAB+AAAAfgAA
        AKAAAACoAAAA//////////////////////8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAfQAAAKoAAADdAAAA/wAAAOUAAADIAAAAkQAAACIAAAAbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD//////////////////////wAAAP//////////////////////AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAB9AAAAqgAAAN0AAAD/AAAA5QAAAMgAAACRAAAAIgAAABsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////AAAA////////////////////
        //8AAAD/AAAAAAAAAAAAAAA0AAAAPAAAAMsAAAD/AAAA7AAAAOAAAAB9AAAADAAAAAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////8AAAD/////////
        ////////AAAA/wAAACwAAAAAAAAAAAAAADQAAAA8AAAAywAAAP8AAADsAAAA4AAAAH0AAAAMAAAACAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////wAA
        AP///////////wAAAP8AAAAsAAAALAAAAAAAAAAAAAAAjAAAAKEAAADmAAAA/wAAAKIAAABkAAAANQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA4wAAACwAAAAsAAAAAAAAAAAAAACMAAAAoQAAAOYAAAD/AAAAogAA
        AGQAAAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEUAAACtAAAAwwAAAP8AAADjAAAALAAAACwAAAAAAAAAAAAAAMYAAADkAAAA+AAA
        AP8AAAB3AAAAHQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAA3AAAAPQAA
        AD4AAAA+AAAAPgAAAD4AAAA+AAAAcgAAAMEAAADSAAAA/wAAAOMAAAAsAAAALAAAAAAAAAAAAAAAxgAA
        AOQAAAD4AAAA/wAAAHcAAAAdAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAA
        ADcAAAA9AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAByAAAAwQAAANIAAAD/AAAA4wAAACwAAAAsAAAAAgAA
        AAIAAADbAAAA/AAAAPcAAAD1AAAAYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADUAAAA4wAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADjAAAALAAA
        ACwAAAACAAAAAgAAANsAAAD8AAAA9wAAAPUAAABiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAANQAAADjAAAA+QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOMAAAAsAAAALAAAAAYAAAAGAAAA3gAAAP8AAADzAAAA7wAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAaQAAAHAAAAB7AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAA
        AH4AAAB+AAAAcAAAABUAAAAVAAAABgAAAAYAAADeAAAA/wAAAPMAAADvAAAAYAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpAAAAcAAAAHsAAAB+AAAAfgAAAH4AAAB+AAAAfgAA
        AH4AAAB+AAAAfgAAAH4AAABwAAAAFQAAABUAAAAAAAAAAAAAANEAAADxAAAA+QAAAPwAAABqAAAACQAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0QAAAPEAAAD5AAAA/AAA
        AGoAAAAJAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAAAAwAAA
        AO4AAAD/AAAAjgAAAEIAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AKYAAADAAAAA7gAAAP8AAACOAAAAQgAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAYAAAAG8AAADZAAAA/wAAAMoAAACnAAAAWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAUAAABcAAAA3wAAAM4AAAChAAAAjAAA
        AAAAAAAAAAAAAAAAAAAAAABgAAAAbwAAANkAAAD/AAAAygAAAKcAAABZAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABQAAAFwAAADfAAAAzgAA
        AKEAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAOAAAArwAAAOoAAAD3AAAA/wAAAK8AAABTAAAANwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0AAAByAAAAqgAA
        AP8AAADlAAAAngAAAIkAAAAAAAAAAAAAAAAAAAAAAAAADAAAAA4AAACvAAAA6gAAAPcAAAD/AAAArwAA
        AFMAAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQAA
        AHIAAACqAAAA/wAAAOUAAACeAAAAiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkAAABOAAAAtgAA
        APwAAAD9AAAA/wAAAN0AAACYAAAAhAAAADIAAAAvAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAqAAAAbwAA
        AJEAAADMAAAA/wAAAPsAAAD1AAAAvgAAACYAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQAA
        AE4AAAC2AAAA/AAAAP0AAAD/AAAA3QAAAJgAAACEAAAAMgAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAIgAA
        ACoAAABvAAAAkQAAAMwAAAD/AAAA+wAAAPUAAAC+AAAAJgAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACwAAABJAAAAkwAAAOgAAADwAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA9AAAAOoAAACoAAAARAAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAEkAAACTAAAA6AAAAPAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD0AAAA6gAAAKgAAABEAAAAMgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAJAAAAFwAAABoAAAAmgAA
        AJwAAAC/AAAAvwAAAL8AAAC/AAAAqgAAAKUAAAB4AAAAYgAAADMAAAAKAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAkAAAAXAAA
        AGgAAACaAAAAnAAAAL8AAAC/AAAAvwAAAL8AAACqAAAApQAAAHgAAABiAAAAMwAAAAoAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//ADB//wAgP/AAAB/wAAAPAAAADwAAAA8Af4APAH+ADAH/wAwB/+AMB/
        /wDAf/+AwH+AAMB/gAAB/4AAAf+AAAH/gAAB/4AAwH///8B////Af///wH///8B//gPAf/4DwB/+A8Af
        /gPwAeAD8AHgA/wAAA/8AAAP/wAAP/8AAD8=
</value>
  </data>
</root>